//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.IO;
using System.IO.IsolatedStorage;

using Microsoft.Phone.Data.Linq.Mapping;
using Microsoft.Phone.Data.Linq;



[global::System.Data.Linq.Mapping.TableAttribute()]
public partial class SIMPLE_RELATION_1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID_INT;
	
	private int _Integer1;
	
	private EntitySet<SIMPLE_RELATION_2> _SIMPLE_RELATION_2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_INTChanging(int value);
    partial void OnID_INTChanged();
    partial void OnInteger1Changing(int value);
    partial void OnInteger1Changed();
    #endregion
	
	public SIMPLE_RELATION_1()
	{
		this._SIMPLE_RELATION_2 = new EntitySet<SIMPLE_RELATION_2>(new Action<SIMPLE_RELATION_2>(this.attach_SIMPLE_RELATION_2), new Action<SIMPLE_RELATION_2>(this.detach_SIMPLE_RELATION_2));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_INT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID_INT
	{
		get
		{
			return this._ID_INT;
		}
		set
		{
			if ((this._ID_INT != value))
			{
				this.OnID_INTChanging(value);
				this.SendPropertyChanging();
				this._ID_INT = value;
				this.SendPropertyChanged("ID_INT");
				this.OnID_INTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="integer1", Storage="_Integer1", DbType="Int NOT NULL")]
	public int Integer1
	{
		get
		{
			return this._Integer1;
		}
		set
		{
			if ((this._Integer1 != value))
			{
				this.OnInteger1Changing(value);
				this.SendPropertyChanging();
				this._Integer1 = value;
				this.SendPropertyChanged("Integer1");
				this.OnInteger1Changed();
			}
		}
	}
	
	[global::System.Runtime.Serialization.IgnoreDataMember]
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SM1_key", Storage="_SIMPLE_RELATION_2", ThisKey="ID_INT", OtherKey="SM1_ID", DeleteRule="CASCADE")]
	public EntitySet<SIMPLE_RELATION_2> SIMPLE_RELATION_2
	{
		get
		{
			return this._SIMPLE_RELATION_2;
		}
		set
		{
			this._SIMPLE_RELATION_2.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SIMPLE_RELATION_2(SIMPLE_RELATION_2 entity)
	{
		this.SendPropertyChanging();
		entity.SIMPLE_RELATION_1 = this;
	}
	
	private void detach_SIMPLE_RELATION_2(SIMPLE_RELATION_2 entity)
	{
		this.SendPropertyChanging();
		entity.SIMPLE_RELATION_1 = null;
	}
}